package cmd

import (
	"fmt"

	"github.com/ignorantshr/mgit/model"
	"github.com/spf13/cobra"
)

func init() {
	tagCmd.Flags().BoolVarP(&_createTagObj, "create_tag_object", "a", false, "annotated tag, needs a message")
	tagCmd.Flags().StringVarP(&_tagMsg, "message", "m", "", "tag message")
	rootCmd.AddCommand(tagCmd)
}

var _createTagObj bool
var _tagMsg string

var tagCmd = &cobra.Command{
	Use:   "tag | tag <name> [object]",
	Short: "List and create tags",
	Args:  cobra.RangeArgs(0, 2),
	Run: func(cmd *cobra.Command, args []string) {
		repo := model.FindRepo(".")
		if len(args) != 0 {
			if _createTagObj && _tagMsg == "" {
				fmt.Println("annotated tag must be with a message")
			}
			if len(args) == 1 || args[1] == "" {
				createTag(repo, args[0], "HEAD", _createTagObj)
			} else {
				createTag(repo, args[0], args[1], _createTagObj)
			}
		} else {
			refs := model.ListRef(repo, "")
			showRef(repo, refs["tags"].(map[string]any), false, "")
		}
	},
}

func createTag(repo *model.Repository, name, ref string, createObj bool) {
	sha := model.FindObject(repo, ref, "", true)

	if createObj {
		// create a tag object
		tag := model.NewTagObj()
		tag.KV().Object = sha
		tag.KV().Tag = name
		tag.KV().Tagger = readGitAuthor()
		tag.KV().Message = "A tag generated by mgit, which won't let you customize the message!"
		tag_sha := model.WriteObject(repo, tag)
		model.CreateRef(repo, "tags/"+name, tag_sha)
	} else {
		model.CreateRef(repo, "tags/"+name, sha)
	}
}
