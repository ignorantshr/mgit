package cmd

import (
	"github.com/ignorantshr/mgit/model"
	"github.com/spf13/cobra"
)

func init() {
	createTagObj = tagCmd.Flags().BoolP("create_tag_object", "a", false, "Whether to create a tag object")
	rootCmd.AddCommand(tagCmd)
}

var createTagObj *bool

var tagCmd = &cobra.Command{
	Use:                   "tag | tag NAME [OBJECT] | tag -a NAME [OBJECT]",
	Short:                 "List and create tags",
	DisableFlagsInUseLine: true,
	Args:                  cobra.RangeArgs(0, 2),
	Run: func(cmd *cobra.Command, args []string) {
		repo := model.FindRepo(".")
		if *createTagObj {
			createTag(repo, args[0], args[1], *createTagObj)
		} else {
			refs := model.ListRef(repo, "")
			showRef(repo, refs["tags"].(map[string]any), false, "")
		}
	},
}

func createTag(repo *model.Repository, name, ref string, createObj bool) {
	sha := model.FindObject(repo, ref, "", true)

	if createObj {
		// create a tag object
		tag := model.NewTagObj()
		tag.KV().Object = sha
		tag.KV().Tag = name
		tag.KV().Tagger = "mgit <mgit@example.com>"
		tag.KV().Message = "A tag generated by wyag, which won't let you customize the message!"
		tag_sha := model.WriteObject(repo, tag)
		model.CreateRef(repo, name, tag_sha)
	} else {
		model.CreateRef(repo, name, sha)
	}
}
